<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OamUser', 'testdb');

/**
 * BaseOamUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $added_on
 * @property integer $updated_on
 * @property integer $added_by_oam_user_id
 * @property string $name
 * @property string $email_address
 * @property string $password
 * @property string $role_list
 * @property integer $is_deleted
 * @property Doctrine_Collection $OamUser
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $Manufacturer
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $ProductImage
 * @property Doctrine_Collection $ProductVariation
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOamUser extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('oam_user');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('added_on', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_on', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('added_by_oam_user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('email_address', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('password', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('role_list', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('is_deleted', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('OamUser', array(
             'local' => 'id',
             'foreign' => 'added_by_oam_user_id'));

        $this->hasMany('Category', array(
             'local' => 'id',
             'foreign' => 'added_by_oam_user_id'));

        $this->hasMany('Manufacturer', array(
             'local' => 'id',
             'foreign' => 'added_by_oam_user_id'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'added_by_oam_user_id'));

        $this->hasMany('ProductImage', array(
             'local' => 'id',
             'foreign' => 'added_by_oam_user_id'));

        $this->hasMany('ProductVariation', array(
             'local' => 'id',
             'foreign' => 'added_by_oam_user_id'));
    }
}