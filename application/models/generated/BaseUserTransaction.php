<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserTransaction', 'mogicard');

/**
 * BaseUserTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $added_on
 * @property integer $updated_on
 * @property integer $user_id
 * @property integer $transaction_type
 * @property integer $transaction_state
 * @property integer $user_wallet_item_id
 * @property integer $product_id
 * @property integer $merchant_id
 * @property integer $merchant_outlet_id
 * @property integer $merchant_outlet_terminal_id
 * @property integer $merchant_outlet_pin_id
 * @property MerchantOutletPin $MerchantOutletPin
 * @property User $User
 * @property UserWalletItem $UserWalletItem
 * @property Product $Product
 * @property Merchant $Merchant
 * @property MerchantOutlet $MerchantOutlet
 * @property MerchantOutletTerminal $MerchantOutletTerminal
 * @property Doctrine_Collection $PinBox
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserTransaction extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user_transaction');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('added_on', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_on', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('transaction_type', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('transaction_state', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('user_wallet_item_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('product_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('merchant_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('merchant_outlet_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('merchant_outlet_terminal_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('merchant_outlet_pin_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MerchantOutletPin', array(
             'local' => 'merchant_outlet_pin_id',
             'foreign' => 'id'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('UserWalletItem', array(
             'local' => 'user_wallet_item_id',
             'foreign' => 'id'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id'));

        $this->hasOne('Merchant', array(
             'local' => 'merchant_id',
             'foreign' => 'id'));

        $this->hasOne('MerchantOutlet', array(
             'local' => 'merchant_outlet_id',
             'foreign' => 'id'));

        $this->hasOne('MerchantOutletTerminal', array(
             'local' => 'merchant_outlet_terminal_id',
             'foreign' => 'id'));

        $this->hasMany('PinBox', array(
             'local' => 'id',
             'foreign' => 'user_transaction_id'));
    }
}